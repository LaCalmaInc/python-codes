{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "7e792c93-e40f-473e-bbda-9d638ddee29e",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d9c1e561-08eb-43d6-ae4b-a4c488b6aa87",
   "metadata": {},
   "source": [
    "1. Considere:\n",
    "\n",
    "$$\n",
    "\\begin{align*}\n",
    "    \\begin{bmatrix}\n",
    "        1 & 2 & 3\\\\\n",
    "        3 & 2 & 1\\\\\n",
    "        1 & 1 & -1\n",
    "    \\end{bmatrix}\n",
    "    \\mathbf{x} &=\n",
    "    \\begin{bmatrix}\n",
    "        1\\\\\n",
    "        1\\\\\n",
    "        1\n",
    "    \\end{bmatrix}.\n",
    "\\end{align*}\n",
    "$$\n",
    "\n",
    "a. Construya el sub-espacio de Krylov *no-ortonormalizado* asociado.\n",
    "\n",
    "b. Construya el sub-espacio de Krylov *ortonormalizado* asociado.\n",
    "\n",
    "c. Construya la descomposición de Hessenberg asociada.\n",
    "\n",
    "d. Determine el sistema de ecuaciones *equivalente* a resolver con GMRes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "b296a663-3ecc-4a96-89d3-414c9a3c0171",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Definimos la matriz y el lado derecho del sistema Ax = b\n",
    "A = np.array([[1.,2.,3.],[3.,2.,1.],[1.,1.,-1.]])\n",
    "b = np.array([1.,1.,1.])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a7bda556-9383-49ad-93f6-b481c5ec390b",
   "metadata": {},
   "source": [
    "a. El sub-espacio de Krylov viene dado por:\n",
    "\n",
    "$$\n",
    "K_k = \\{\\mathbf{b},A\\,\\mathbf{b}, A^2\\,\\mathbf{b}, \\dots, A^{k-1}\\,\\mathbf{b}\\}\n",
    "$$\n",
    "\n",
    "Para este caso $k = 3$:\n",
    "\n",
    "$$\n",
    "K_3 = \\{\\mathbf{b},A\\,\\mathbf{b}, A^2\\,\\mathbf{b}\\} = \\{\\mathbf{b}_1,\\mathbf{b}_2,\\mathbf{b}_3\\}\n",
    "$$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "7b29602a-b6bc-493e-99d9-d7bff2bb8eb9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "b1\n",
      "[[1.]\n",
      " [1.]\n",
      " [1.]]\n",
      "b2\n",
      "[[6.]\n",
      " [6.]\n",
      " [1.]]\n",
      "b3\n",
      "[[21.]\n",
      " [31.]\n",
      " [11.]]\n"
     ]
    }
   ],
   "source": [
    "#sub-espacio de Krylov no-ortonormalizado\n",
    "b1 = b\n",
    "b2 = np.dot(A,b1)\n",
    "b3 = np.dot(A,b2)\n",
    "\n",
    "print(\"b1\")\n",
    "print(b1[:,None])\n",
    "print(\"b2\")\n",
    "print(b2[:,None])\n",
    "print(\"b3\")\n",
    "print(b3[:,None])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5718e8d5-cbd7-4ef0-ad51-2c35d094db86",
   "metadata": {},
   "source": [
    "b. Para construir el sub-espacio de Krylov ortonormalizado, aplicamos la iteración de Arnoldi, con lo cual obtendremos los coeficientes $h_{ij}$ y los vectores $q_i$.\n",
    "\n",
    "Iteración $1$:\n",
    "\n",
    "$\\mathbf{q}_1 = \\mathbf{b} / \\lVert \\mathbf{b} \\rVert$\n",
    "\n",
    "$A\\,\\mathbf{q}_1 = h_{11}\\,\\mathbf{q}_1 + h_{21}\\,\\mathbf{q}_2$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "72cb7575-d7c2-4138-ac29-d08cb6c9229e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "q1\n",
      "[[0.57735027]\n",
      " [0.57735027]\n",
      " [0.57735027]]\n"
     ]
    }
   ],
   "source": [
    "#Se obtiene q1\n",
    "q1 = b / np.linalg.norm(b)\n",
    "print(\"q1\")\n",
    "print(q1[:,None])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3d267a88-1ca8-479e-bbdf-1aaa0bd5157f",
   "metadata": {},
   "source": [
    "Multiplicamos $\\mathbf{q}_1^*$ a la ecuación:\n",
    "\n",
    "$\\mathbf{q}_1^*(A\\,\\mathbf{q}_1) = h_{11}$\n",
    "\n",
    "Restamos $h_{11}\\,\\mathbf{q}_1$:\n",
    "\n",
    "$A\\,\\mathbf{q}_1 - h_{11}\\,\\mathbf{q}_1 = h_{21}\\,\\mathbf{q}_2$\n",
    "\n",
    "Aplicamos norma:\n",
    "\n",
    "$\\lVert A\\,\\mathbf{q}_1 - h_{11}\\,\\mathbf{q}_1 \\rVert = h_{21}$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "d0f80fb0-df43-484b-8018-406abd8d68f3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "h11: 4.333333333333334\n",
      "h21: 2.357022603955159\n"
     ]
    }
   ],
   "source": [
    "#Se obtiene h11 y h21\n",
    "y = np.dot(A,q1)\n",
    "h11 = np.dot(q1,y)\n",
    "y = y - h11*q1\n",
    "h21 = np.linalg.norm(y)\n",
    "\n",
    "print(\"h11:\",h11)\n",
    "print(\"h21:\",h21)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4c30c3a5-72c0-43ac-8797-90c22c97067a",
   "metadata": {},
   "source": [
    "Iteración 2:\n",
    "\n",
    "Obtenemos $\\mathbf{q}_2$:\n",
    "\n",
    "$\\mathbf{q}_2 = (A\\,\\mathbf{q}_1 - h_{11}\\,\\mathbf{q}_1) / h_{21}$\n",
    "\n",
    "La ecuación para $A\\,\\mathbf{q}_2$ es:\n",
    "\n",
    "$A\\,\\mathbf{q}_2 = h_{12}\\,\\mathbf{q}_1 + h_{22}\\,\\mathbf{q}_2 + h_{32}\\,\\mathbf{q}_3$\n",
    "\n",
    "Multiplicamos $\\mathbf{q}_1^*$ a la ecuación:\n",
    "\n",
    "$\\mathbf{q}_1^*(A\\,\\mathbf{q}_2) = h_{12}$\n",
    "\n",
    "Multiplicamos $\\mathbf{q}_2^*$ a la ecuación:\n",
    "\n",
    "$\\mathbf{q}_2^*(A\\,\\mathbf{q}_2 - h_{12}\\,\\mathbf{q}_1) = h_{22}$\n",
    "\n",
    "Restamos $h_{12}\\,\\mathbf{q}_1 + h_{22}\\,\\mathbf{q}_2$:\n",
    "\n",
    "$A\\,\\mathbf{q}_2 - h_{12}\\,\\mathbf{q}_1 - h_{22}\\,\\mathbf{q}_2 = h_{32}\\,\\mathbf{q}_3$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "83f79bfd-db20-461e-8a83-f618ea0d0996",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "q2\n",
      "[[ 0.40824829]\n",
      " [ 0.40824829]\n",
      " [-0.81649658]]\n",
      "h12: 0.9428090415820629\n",
      "h22: -1.333333333333334\n",
      "h32: 1.7320508075688776\n"
     ]
    }
   ],
   "source": [
    "#Obtenemos q2\n",
    "q2 = y / h21\n",
    "\n",
    "#Obtenemos h12, h22 y h32\n",
    "y = np.dot(A,q2)\n",
    "h12 = np.dot(q1,y)\n",
    "y = y - h12*q1\n",
    "h22 = np.dot(q2,y)\n",
    "y = y - h22*q2\n",
    "h32 = np.linalg.norm(y)\n",
    "\n",
    "print(\"q2\")\n",
    "print(q2[:,None])\n",
    "\n",
    "print(\"h12:\",h12)\n",
    "print(\"h22:\",h22)\n",
    "print(\"h32:\",h32)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a30e524d-70d2-4677-b6f1-d0d9f391a998",
   "metadata": {},
   "source": [
    "Finalmente, calculamos $\\mathbf{q}_3$\n",
    "\n",
    "$\\mathbf{q}_3 = (A\\,\\mathbf{q}_2 - h_{12}\\,\\mathbf{q}_1 - h_{22}\\,\\mathbf{q}_2) / h_{32}$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "3a32960c-83d0-4a07-8e54-a9b5173ab0e5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "q3\n",
      "[[-7.07106781e-01]\n",
      " [ 7.07106781e-01]\n",
      " [-2.56395025e-16]]\n"
     ]
    }
   ],
   "source": [
    "q3 = y / h32\n",
    "\n",
    "print(\"q3\")\n",
    "print(q3[:,None])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dbe8c75b-ff3f-43de-a0cb-360ce64d01a8",
   "metadata": {},
   "source": [
    "Como $h_{32} > 0$, significa que aún podemos realizar una iteración más:\n",
    "\n",
    "La ecuación para $A\\,\\mathbf{q}_3$ es:\n",
    "\n",
    "$A\\,\\mathbf{q}_3 = h_{13}\\,\\mathbf{q}_1 + h_{23}\\,\\mathbf{q}_2 + h_{33}\\,\\mathbf{q}_3 + h_{43}\\,\\mathbf{q}_4$\n",
    "\n",
    "Multiplicamos $\\mathbf{q}_1^*$ a la ecuación:\n",
    "\n",
    "$\\mathbf{q}_1^*(A\\,\\mathbf{q}_3) = h_{13}$\n",
    "\n",
    "Multiplicamos $\\mathbf{q}_2^*$ a la ecuación:\n",
    "\n",
    "$\\mathbf{q}_2^*(A\\,\\mathbf{q}_3 - h_{13}\\,\\mathbf{q}_1) = h_{23}$\n",
    "\n",
    "Multiplicamos $\\mathbf{q}_3^*$ a la ecuación:\n",
    "\n",
    "$\\mathbf{q}_2^*(A\\,\\mathbf{q}_3 - h_{13}\\,\\mathbf{q}_1 - h_{23}\\,\\mathbf{q}_2) = h_{33}$\n",
    "\n",
    "Restamos $h_{13}\\,\\mathbf{q}_1 + h_{23}\\,\\mathbf{q}_2 + h_{33}\\,\\mathbf{q}_3$:\n",
    "\n",
    "$A\\,\\mathbf{q}_3 - h_{13}\\,\\mathbf{q}_1 - h_{23}\\,\\mathbf{q}_2 - h_{33}\\,\\mathbf{q}_3$\n",
    "\n",
    "Aplicamos norma:\n",
    "\n",
    "$\\lVert A\\,\\mathbf{q}_3 - h_{13}\\,\\mathbf{q}_1 - h_{23}\\,\\mathbf{q}_2 - h_{33}\\,\\mathbf{q}_3 \\rVert = h_{43}$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "b118b0d9-b289-452c-80ec-e2d49070c634",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "h13: -9.992007221626409e-16\n",
      "h23: -8.326672684688674e-16\n",
      "h33: -0.9999999999999999\n",
      "h43: 2.720397184653305e-16\n"
     ]
    }
   ],
   "source": [
    "y = np.dot(A,q3)\n",
    "h13 = np.dot(q1,y)\n",
    "y = y - h13*q1\n",
    "h23 = np.dot(q2,y)\n",
    "y = y - h23*q2\n",
    "h33 = np.dot(q3,y)\n",
    "y = y - h33*q3\n",
    "h43 = np.linalg.norm(y)\n",
    "\n",
    "print(\"h13:\",h13)\n",
    "print(\"h23:\",h23)\n",
    "print(\"h33:\",h33)\n",
    "print(\"h43:\",h43)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3cda54f1-cda6-45c1-889f-6fabb0923756",
   "metadata": {},
   "source": [
    "Podemos observar que $h_{43} \\approx 0$ por lo tanto dejamos de iterar."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c96b0257-382c-4c93-b7ca-d622647388e8",
   "metadata": {},
   "source": [
    "c. Construya la descomposición de Hessenberg asociada.\n",
    "\n",
    "Como hemos dejado de iterar, construimos la descomposición:\n",
    "\n",
    "$A\\,Q_3 = Q_4\\,H_3$\n",
    "\n",
    "Notar que en este caso $Q_3 = Q_4$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "9c7e3236-e2b1-44d5-b41a-bef90d76619e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "A x Q3\n",
      "[[ 3.46410162e+00 -1.22474487e+00  7.07106781e-01]\n",
      " [ 3.46410162e+00  1.22474487e+00 -7.07106781e-01]\n",
      " [ 5.77350269e-01  1.63299316e+00  1.45372722e-16]]\n",
      "Q4 x H3\n",
      "[[ 3.46410162e+00 -1.22474487e+00  7.07106781e-01]\n",
      " [ 3.46410162e+00  1.22474487e+00 -7.07106781e-01]\n",
      " [ 5.77350269e-01  1.63299316e+00  3.59376197e-16]]\n"
     ]
    }
   ],
   "source": [
    "Q = np.zeros((3,3))\n",
    "Q[:,0] = q1\n",
    "Q[:,1] = q2\n",
    "Q[:,2] = q3\n",
    "\n",
    "H3 = np.array([[h11,h12,h13],[h21,h22,h23],[0.,h32,h33]])\n",
    "\n",
    "AQ = A@Q\n",
    "QH3 = Q@H3\n",
    "\n",
    "#Comprobamos que el lado izquierdo y derecho son iguales\n",
    "print(\"A x Q3\")\n",
    "print(AQ)\n",
    "print(\"Q4 x H3\")\n",
    "print(QH3)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f5d0ac44-cc22-46c1-8d87-99af1292dd8f",
   "metadata": {},
   "source": [
    "d. Luego, el sistema equivalente es:\n",
    "\n",
    "$H_3\\,\\mathbf{c} = \\lVert \\mathbf{b}\\rVert\\,\\mathbf{e}_1$\n",
    "\n",
    "$H_3\\,\\begin{bmatrix}c_1 \\\\ c_2 \\\\ c_3\\end{bmatrix} = \\begin{bmatrix}\\lVert \\mathbf{b} \\rVert \\\\ 0 \\\\ 0\\end{bmatrix}$\n",
    "\n",
    "$Qh,Rh = qr(H_3)$\n",
    "\n",
    "$Rh\\,\\mathbf{c} = Qh^*\\,\\lVert \\mathbf{b}\\rVert\\,\\mathbf{e}_1$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "6238d4f5-a2cb-4150-a9da-e635dce6894e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "c:\n",
      "[[0.28867513]\n",
      " [0.51031036]\n",
      " [0.88388348]]\n"
     ]
    }
   ],
   "source": [
    "#Calculamos el vector de coeficientes.\n",
    "be = np.array([np.linalg.norm(b),0.,0.])\n",
    "Qh,Rh = np.linalg.qr(H3,mode=\"reduced\")\n",
    "bh = np.dot(Qh.T,be)\n",
    "c = np.linalg.solve(Rh,bh)\n",
    "print(\"c:\")\n",
    "print(c[:,None])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "ac4fcc78-a1b8-48cf-83dc-c62e2851970e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "x:\n",
      "[[-0.25]\n",
      " [ 1.  ]\n",
      " [-0.25]]\n"
     ]
    }
   ],
   "source": [
    "#Calculamos la solución\n",
    "x = np.dot(Q,c)\n",
    "print(\"x:\")\n",
    "print(x[:,None])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f4633f66-31ec-4310-9d4a-ad3adb3e1009",
   "metadata": {},
   "source": [
    "Comprobamos que efectivamente es la solución del sistema $A\\,\\mathbf{x} = \\mathbf{b}$:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "e3ef289b-9fce-4f7e-b4ec-afb83c4022d0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Ax:\n",
      "[[1.]\n",
      " [1.]\n",
      " [1.]]\n",
      "b:\n",
      "[[1.]\n",
      " [1.]\n",
      " [1.]]\n"
     ]
    }
   ],
   "source": [
    "Ax = np.dot(A,x)\n",
    "print(\"Ax:\")\n",
    "print(Ax[:,None])\n",
    "print(\"b:\")\n",
    "print(b[:,None])"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
